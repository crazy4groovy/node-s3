image: node:14

cache:
  key: '$CI_BUILD_REF_NAME'
  paths:
    - node_modules
    - .yarn-cache
    - .scannerwork
    - /root/.sonar

stages:
  - install
  - test
  - analysis
#  - release
  - update

before_script:
  - export CI=true
  - export GH_REPO=https://${GH_TOKEN}:x-oauth-basic@github.com/d0whc3r/node-s3

after_script:
  - rm -fr .npmrc

install-deps:
  stage: install
  script:
    - yarn install --cache-folder .yarn-cache
    - yarn build

tests:
  stage: test
  services:
    - name: bitnami/minio:latest
      alias: minio
  variables:
    MINIO_ACCESS_KEY: 'access-mock-key'
    MINIO_SECRET_KEY: 'secret-mock-key'
    MINIO_PORT_NUMBER: 9000
    ENDPOINT: 'http://minio:9000'
    ACCESS_KEY: 'access-mock-key'
    SECRET_KEY: 'secret-mock-key'
  script:
    - yarn test:coverage
    - yarn test:send-coverages
  coverage: '/All files\s*\|\s*([\d.]+)/'
  artifacts:
    paths:
      - coverage
    expire_in: 30 days

sonarqube-reports-master:
  stage: analysis
  image: timbru31/java-node
  only:
    - master
  script:
    - yarn sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Duser.home=./

sonarqube-reports-branch:
  stage: analysis
  image: timbru31/java-node
  except:
    - master
  script:
    - yarn sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Dsonar.branch.name=${CI_BUILD_REF_NAME} -Dsonar.branch.target=master -Duser.home=./

#semantic-release:
#  stage: release
#  only:
#    - master
#  script:
#    - git config --global user.email "ghpages@gitlab"
#    - git config --global user.name "Gitlab CI"
#    - git remote set-url origin ${GH_REPO}
#    - git checkout ${CI_COMMIT_REF_NAME}
#    - yarn semantic-release

update-patch:
  stage: update
  when: manual
  only:
    - master
  script:
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin ${GH_REPO}
    - git checkout ${CI_COMMIT_REF_NAME}
    - yarn build
    - yarn version --patch
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    - npm publish

update-minor:
  stage: update
  when: manual
  only:
    - master
  script:
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin ${GH_REPO}
    - git checkout ${CI_COMMIT_REF_NAME}
    - yarn build
    - yarn version --minor
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    - npm publish

update-major:
  stage: update
  when: manual
  only:
    - master
  script:
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin ${GH_REPO}
    - git checkout ${CI_COMMIT_REF_NAME}
    - yarn build
    - yarn version --major
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    - npm publish
